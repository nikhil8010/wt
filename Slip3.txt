
//a.html
<html>
<body>
  <form name="input" action="b.php" method="post">
    <label for="username">Username:</label><input type="text" value="<?= $_POST["username"] ?>" id="username" name="username" />
    <label for="password">Password:</label><input type="password" value="" id="password" name="password" />
    <div class="error"><?= $errorMsg ?></div>
    <input type="submit" value="Home" name="sub" />
  </form>
</body>
</html>


//b.php
<?php
session_start();
$errorMsg = "";
$validUser = $_SESSION["login"] === true;
if(isset($_POST["sub"])) {
  $validUser = $_POST["username"] == "admin" && $_POST["password"] == "password";
  if(!$validUser) $errorMsg = "Invalid username or password.";
  else $_SESSION["login"] = true;
}
if($validUser) {
   header("Location: /login-success.php"); die();
}
?>



import pandas as ps
data=pd.read_csv('User.csv')
data.sample(5)
X=data['Age']
Y=data['salary']
from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,train_size=0.7, 
                                                    test_size=0.3)
import statsmodels.api as sm
X_train_sm = sm.add_constant(X_train)
lr = sm.OLS(Y_train, X_train_sm).fit()
lr.params
lr.summary()
plt.scatter(X_train, Y_train)
plt.plot(X_train, 7.4500 + 2.5643*X_train, 'r')
plt.show()


#Slip 3 logistic


import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn import metrics
import seaborn as sn
import matplotlib.pyplot as plt

data=pd.read_csv('Fish.csv')
X=data['Height']
Y=data['Weight']
from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,train_size=0.7, 
                                                    test_size=0.3)
X_train
Y_train

import statsmodels.api as sm
X_train_sm = sm.add_constant(X_train)
lr = sm.OLS(Y_train, X_train_sm).fit()
lr.params

lr.summary()

plt.scatter(X_train, Y_train)
plt.plot(X_train, -147.6993 + 59.8235*X_train, 'r')
plt.show()
